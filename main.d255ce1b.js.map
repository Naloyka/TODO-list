{"version":3,"sources":["js/getTaskHTML.js","js/loadStateTask.js","js/load.js","js/checked.js","js/deleteTask.js","js/loadRemoteTasks.js","js/main.js"],"names":["getTaskHTML","text","done","remoteTask","pasteTask","document","querySelector","loadTaskState","window","addEventListener","i","localStorage","length","openTask","JSON","parse","textContent","checkboxInput","Boolean","checked","flagChecked","flagClass","insertAdjacentHTML","load","containerTask","Array","from","querySelectorAll","getAttribute","textTask","childTask","task","objTask","stringify","setItem","classList","add","remove","deleteTask","close","forEach","item","e","deleteElement","closest","console","log","target","clear","loadRemoteTasks","xhr","XMLHttpRequest","open","send","readyState","DONE","parseJ","responseText","title","selectOption","containerOption","body","getElementsByTagName","toggle","style","display","closeUser","containerUser","bodyContent","option","meaning","currentTarget","stateChecked","containerInput","input","addTask","addTaskItem","value","key"],"mappings":"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","file":"main.d255ce1b.js","sourceRoot":"..","sourcesContent":["export function getTaskHTML(text, done, remoteTask) {\n   \n    return `<div class=\"container__task\" ${remoteTask ? \"data-flag=\\\"server\\\"\" : \"\"}>\n    <div class=\"task\">\n    <div class=\"task__item\">\n    <label class=\"checkbox\">\n        <input type=\"checkbox\" name=\"checkbox\" class=\"checkbox__input\"${done ? ' checked' :''} id=\"checkbox\">\n        <span class=\"checkbox__label\"></span>\n    </label>\n    <p class=\"text__task${done ? \" text__task_done\" : \"\"} \" translate=\"no\">${text}</p>\n        </div>\n        <button class=\"close\"></button>\n    </div>\n    </div>`\n}","import { getTaskHTML } from \"./getTaskHTML\";\n\nconst pasteTask = document.querySelector(\".paste__task\")\n\nexport function loadTaskState() {\n    window.addEventListener(\"load\", () => {\n        for (let i = 0; i < localStorage.length; i++) {\n            let openTask = JSON.parse(localStorage[i])\n            let textContent = openTask.textContent\n            let checkboxInput = Boolean(openTask.checked)\n\n            let flagChecked;\n            let flagClass;\n\n            if (checkboxInput) {\n                flagChecked = \"checked\"\n                flagClass = \"text__task_done\"\n            } else {\n                flagChecked = \"\"\n                flagClass = \"\"\n            }\n\n            pasteTask.insertAdjacentHTML('beforeend', getTaskHTML(textContent, flagChecked, false))\n        }\n    })\n}","export function load() {\n\n    const containerTask = Array.from(document.querySelectorAll(\".container__task\"))\n\n    for (let i = 0; i < containerTask.length; i++) {\n\n        if (containerTask[i].getAttribute(\"data-flag\") !== \"server\") {\n            let textTask = containerTask[i].querySelector(\".text__task\").textContent\n            let childTask = containerTask[i].querySelector(\".checkbox__input\").checked\n            let task = {\n                \"checked\": childTask,\n                \"textContent\": textTask,\n            }\n            let objTask = JSON.stringify(task)\n\n            localStorage.setItem(`${i}`, objTask)\n        }\n    }\n}","import { load } from \"./load\"\n\nexport function checked() {\n\n    const checkboxInput = Array.from(document.querySelectorAll(\".checkbox__input\"))\n    const textTask = Array.from(document.querySelectorAll(\".text__task\"))\n\n    for (let i = 0; i < checkboxInput.length; i++) {\n\n        checkboxInput[i].addEventListener(\"click\", () => {\n            if (checkboxInput[i].checked) {\n                textTask[i].classList.add(\"text__task_done\")\n            } else {\n                textTask[i].classList.remove(\"text__task_done\")\n            }\n            load()\n        })\n    }\n}","import { load } from \"./load\"\n\nexport function deleteTask() {\n\n    let close = Array.from(document.querySelectorAll(\".close\"))\n\n    close.forEach(item => {\n        item.addEventListener(\"click\", (e) => {\n\n            let deleteElement = item.closest(\".container__task\")\n            console.log(e.target)\n\n            deleteElement.remove()\n            localStorage.clear()\n            load()\n        })\n    })\n}","import { getTaskHTML } from \"./getTaskHTML\";\nimport { checked } from \"./checked\";\nimport { deleteTask } from \"./deleteTask\";\n\nconst pasteTask = document.querySelector(\".paste__task\")\n\nexport function loadRemoteTasks () {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"https://jsonplaceholder.typicode.com/todos\")\n    xhr.send()\n    xhr.addEventListener(\"readystatechange\", () => {\n        if (xhr.readyState === xhr.DONE) {\n            let parseJ = JSON.parse(xhr.responseText)\n            for (let i = 0; i < 5; i++) {\n                const textContent = parseJ[i].title\n                pasteTask.insertAdjacentHTML('beforeend', getTaskHTML(textContent, false, true))\n            }\n            checked()\n            deleteTask()\n        }\n    })\n}","import {loadTaskState} from \"./loadStateTask\";\nimport {loadRemoteTasks} from \"./loadRemoteTasks\";\nimport {getTaskHTML} from \"./getTaskHTML\";\nimport { deleteTask } from \"./deleteTask\";\nimport { checked } from \"./checked\";\nimport { load } from \"./load\";\n\n/* Option */\n\nconst selectOption = document.querySelector(\".select__option\")\nconst containerOption = document.querySelector(\".option__items\")\nconst body = document.getElementsByTagName(\"body\")\nconst pasteTask = document.querySelector(\".paste__task\")\n\nselectOption.addEventListener(\"click\", () => {\n    selectOption.classList.toggle(\"select__option_active\")\n    if (containerOption.style.display == \"block\") {\n        containerOption.style.display = \"none\"\n    } else {\n        containerOption.style.display = \"block\"\n    }\n})\n\n/* Закрытие всплывающего окна */\n\nconst closeUser = document.querySelector(\".close__user\")\nconst containerUser = document.querySelector(\".container__user\")\nconst bodyContent = document.querySelector(\".body\")\n\ncloseUser.addEventListener(\"click\", () => {\n    containerUser.style = \"display: none\"\n    bodyContent.classList.remove(\"body\")\n})\n\n/* Меняем иконку фильтра */\n\nconst option = Array.from(document.querySelectorAll(\".option\"))\n\noption.forEach((item) =>\n    item.addEventListener(\"click\", (e) => {\n        const meaning = e.currentTarget.textContent;\n        selectOption.textContent = meaning\n        containerOption.style.display = \"none\"\n        selectOption.classList.toggle(\"select__option_active\")\n    }))\n\n/* Фильтр*/\n\noption.forEach(item => {\n\n    item.addEventListener(\"click\", (e) => {\n        const stateChecked = Array.from(document.querySelectorAll(\".checkbox__input\"))\n        const containerTask = Array.from(document.querySelectorAll(\".container__task\"))\n\n        if (item.getAttribute(\"data-value\") == 3) {\n            for (let i = 0; i < stateChecked.length; i++) {\n                containerTask[i].classList.remove(\"container__task_hidden\")\n                if (stateChecked[i].checked === true) {\n                    containerTask[i].classList.add(\"container__task_hidden\")\n                }\n            }\n        }\n\n        if (item.getAttribute(\"data-value\") == 2) {\n            for (let i = 0; i < stateChecked.length; i++) {\n                containerTask[i].classList.remove(\"container__task_hidden\")\n                if (stateChecked[i].checked === false) {\n                    containerTask[i].classList.add(\"container__task_hidden\")\n                }\n            }\n        }\n\n        if (item.getAttribute(\"data-value\") == 1) {\n            for (let i = 0; i < stateChecked.length; i++) {\n                containerTask[i].classList.remove(\"container__task_hidden\")\n            }\n        }\n    })\n})\n\n\n/* Кнопка добавить задачу*/\n\nconst add = document.querySelector(\".add\")\nconst containerInput = document.querySelector(\".container__input\")\nconst input = document.querySelector(\".input\")\n\nfunction addTask() {\n\n    let addTaskItem = function () {\n        if (input.value === \"\") {\n            return\n        }\n        pasteTask.insertAdjacentHTML('afterbegin', getTaskHTML(input.value, false, false))\n        input.value = \"\";\n        checked()\n        load()\n        deleteTask()\n    }\n\n    add.addEventListener(\"click\", () => {\n        \n        addTaskItem()\n    })\n\n    input.addEventListener(\"keyup\", (e) => {\n\n        if (e.key === \"Enter\") {\n            addTaskItem()\n        }\n    })\n}\n\naddTask()\ndeleteTask()\nloadTaskState();\nloadRemoteTasks();\n\n"]}